// Simple drawing in FLTK.

#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/fl_draw.H>


// Our Drawing class exists just to have a draw() member function
// that draws the contents when needed.  Note that we do not
// call this function ourselves; FLTK calls it whenever the drawing
// needs to be refreshed, such as when our application's window
// is uncovered.  From your code, call the Drawing's redraw() function
// to cause it to update itself.  In a real program, draw() would
// refer to some data that is generated by your code, rather than
// just drawing some hardcoded shapes.
//
// See the FLTK documentation for all the drawing
// operations, of which a few simple ones are illustrated here.
//
class Drawing : public Fl_Widget {
  public:
  	Drawing(int X,int Y,int W,int H) : Fl_Widget(X,Y,W,H) {}
  private:
	void draw() {
		fl_color(FL_RED);
		fl_rectf(100,100, 50, 75);
		fl_color(FL_BLUE);
		fl_line_style(0,5);
		fl_line(200, 100, 300, 50);
		fl_color(FL_BLACK);
		fl_arc(150,150, 100,100, 0,0);   
		fl_line_style(0);	 // must reset if we changed it
	}
};


int main() {
// The main window.
    Fl_Window *window = new Fl_Window(320,320,"FLTK drawing example");
// A widget to draw on
    Drawing canvas(10,10,300,300);

// Make the window visible and start processing events
    window->end();
    window->show();  
    return Fl::run();
}

