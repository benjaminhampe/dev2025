#include "ImageWriterFI.hpp"

#ifdef DE_IMAGE_CODEC_FREEIMAGE_ENABLED

#include <de/FileSystem.hpp>
#include <de/Color.hpp>
#include <sstream>

namespace de {
namespace image {

bool
ImageWriterFI::save( std::string const & fileName, Image const & img, uint32_t param )
{
   if ( img.isEmpty() ) return false;

   std::cout << "Writing image html table " << fileName << ", image(" << img.toString() << ")\n";

   std::stringstream s; s <<
   R"(<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
   <html>
   <head>
     <title>ImageExport to HTML table, each cell a pixel.</title>
     <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
     <meta http-equiv="Content-Language" content="en-us">
     <meta name="author" content="Benjamin Hampe">
     <meta name="description" content="Exported image to HTML table">
     <style><!-- .normal { margin:none; padding:none; border:none; font-family: Arial; } --></style>
     <style><!-- table { margin:none; padding:none; border:none; } --></style>
     <style><!-- tr { min-width:1px; min-height:1px; } --></style>
     <style><!-- td { min-width:1px; min-height:1px; } --></style>
   </head>
   <body class="normal">
   <hr>
   <h1>TABLE_IMAGE: Each cell a pixel, for real.</h1>
   <hr><p class="normal">FileName: ")";
   s << fileName;
   s << R"(<hr>
   <table border="0" cellpadding="0" cellspacing="0" width="100%" height="65%">)";

   for ( int32_t y = 0; y < img.getHeight(); ++y )
   {
      s << "<tr>";
      if ( img.getWidth() > 3 ) s << '\n';
      for ( int32_t x = 0; x < img.getWidth(); ++x )
      {
         uint32_t const color = img.getPixel( x, y );

         s << "<td style=\"color:none; background-color: rgb("
           << int32_t( RGBA_R( color ) ) << ","
           << int32_t( RGBA_G( color ) ) << ","
           << int32_t( RGBA_B( color ) ) << ");\"></td>";
         if ( img.getWidth() > 3 ) s << '\n';
      }
      s << "</tr>\n";
   }

   s <<
   R"(</table>
   <hr>
   <p class="normal">Copyright @ 2020 Benjamin Hampe (benjaminhampe@gmx.de)</p>
   <hr>
   </body>
   </html>
   )";

   return TextFile::save( fileName, s.str() );
}

} // end namespace image.
} // end namespace de.

#endif // DE_IMAGE_CODEC_FREEIMAGE_ENABLED
